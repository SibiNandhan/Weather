{"version":3,"sources":["App.js","index.js"],"names":["require","config","api","process","console","log","App","useState","query","setQuery","weather","setWeather","className","main","temp","type","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","placeholder","name","sys","country","d","day","getDate","month","getMonth","year","getFullYear","date","dateBuilder","Date","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAEAA,EAAQ,IAAUC,SAGlB,IAAMC,EACAC,mCADAD,EAEC,2CAEPE,QAAQC,IAAIF,qMAyDGG,MAvDf,WAEA,MAAsBC,mBAAS,IAA/B,mBAAMC,EAAN,KAAYC,EAAZ,KACA,EAA0BF,mBAAS,IAAnC,mBAAMG,EAAN,KAAcC,EAAd,KA4BE,OACE,qBAAKC,UAAkC,oBAAfF,EAAQG,MAAwBH,EAAQG,KAAKC,KAAK,GAAM,WAAkB,MAAlG,SACE,iCACE,qBAAKF,UAAU,aAAf,SACE,uBAAOG,KAAK,OAAOH,UAAU,aAAaI,SAAU,SAAAC,GAAC,OAAER,EAASQ,EAAEC,OAAOC,QAAQA,MAAOX,EAAOY,WA9B3F,SAAAC,GACC,UAAVA,EAAIC,KACLC,MAAM,GAAD,OAAIrB,EAAJ,qBAAyBM,EAAzB,+BAAqDN,IACzDsB,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GACJhB,EAAWgB,GACXlB,EAAS,IACTL,QAAQC,IAAIsB,OAuB2GC,YAAY,gBAGxG,oBAAhBlB,EAAQG,KACf,gCACF,sBAAKD,UAAU,eAAf,UACE,sBAAKA,UAAU,WAAf,UAA2BF,EAAQmB,KAAnC,IAA0CnB,EAAQoB,IAAIC,WACtD,qBAAKnB,UAAU,OAAf,SAzBU,SAACoB,GACnB,IAEIC,EADO,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YACjED,EAAEE,UAAU,GACrBC,EAHO,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAGzGH,EAAEI,YACfC,EAAKL,EAAEM,cACPC,EAAKP,EAAEE,UAEX,MAAM,GAAN,OAAUD,EAAV,YAAiBM,EAAjB,YAAyBJ,EAAzB,YAAkCE,GAiBHG,CAAY,IAAIC,WAGzC,sBAAK7B,UAAU,cAAf,UACE,sBAAKA,UAAU,OAAf,UAAuB8B,KAAKC,MAAMjC,EAAQG,KAAKC,MAA/C,WACA,qBAAKF,UAAU,UAAf,SAA0BF,EAAQA,QAAQ,GAAGG,aAEpC,SCtDnB+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.166db5c3.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nrequire('dotenv').config();\n\n\nconst api={\n  key:process.env.REACT_APP_WEATHER_KEY,\n  base:'https://api.openweathermap.org/data/2.5/'\n}\nconsole.log(process.env)\n\nfunction App() {\n\nconst[query,setQuery]=useState('');\nconst[weather,setWeather]=useState({});\n\nconst search= evt =>{\n  if(evt.key===\"Enter\"){\n    fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n    .then(res=>res.json())\n    .then(result=>{\n      setWeather(result)\n      setQuery('');\n      console.log(result);\n    });\n  }\n}\n\nconst dateBuilder = (d)=>{\n  let months=[\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  let day=days[d.getDate()-1];\n  let month=months[d.getMonth()];\n  let year=d.getFullYear();\n  let date=d.getDate();\n\n  return `${day} ${date} ${month} ${year}`\n}\n\n\n\n\n  return (\n    <div className={(typeof weather.main !=\"undefined\") ? ((weather.main.temp>16 )? 'app warm':'app'):'app'}>\n      <main>\n        <div className=\"search-box\">\n          <input type=\"text\" className=\"search-bar\" onChange={e=>setQuery(e.target.value)} value={query} onKeyPress={search} placeholder=\"Search...\"></input>\n\n        </div>\n        {(typeof weather.main != \"undefined\") ? (\n          <div>\n        <div className=\"location-box\">\n          <div className=\"location\">{weather.name},{weather.sys.country}</div>\n          <div className=\"date\">{dateBuilder(new Date())}</div>\n\n        </div>\n        <div className=\"weather-box\">\n          <div className=\"temp\">{Math.round(weather.main.temp)}Â°C</div>\n          <div className=\"weather\">{weather.weather[0].main}</div>\n          </div>\n        </div>) : ('')}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}